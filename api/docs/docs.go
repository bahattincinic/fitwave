// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/activities": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "activity"
                ],
                "summary": "List Activities",
                "parameters": [
                    {
                        "type": "string",
                        "description": "pagination limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "active page",
                        "name": "page",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.PaginatedResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        " count": {
                                            "type": "integer"
                                        },
                                        "Results": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/models.Activity"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/activities/{id}": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "activity"
                ],
                "summary": "Get Activity",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Activity ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Activity"
                        }
                    }
                }
            }
        },
        "/api/activities/{id}/gpx": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "activity"
                ],
                "summary": "Export Activity GPX",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Activity ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Strava Access Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/activities/{id}/laps": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "activity"
                ],
                "summary": "Get Activity Laps",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Activity ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Strava Access Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.PaginatedResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        " count": {
                                            "type": "integer"
                                        },
                                        "Results": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/strava.LapEffortSummary"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/athletes": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "athlete"
                ],
                "summary": "List Athletes",
                "parameters": [
                    {
                        "type": "string",
                        "description": "pagination limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "active page",
                        "name": "page",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.PaginatedResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        " count": {
                                            "type": "integer"
                                        },
                                        "Results": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/models.Athlete"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/athletes/{id}": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "athlete"
                ],
                "summary": "Get Athlete",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Athlete ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Athlete"
                        }
                    }
                }
            }
        },
        "/api/auth/authorization-url": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Get Access Token from Auth Code",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Callback URL",
                        "name": "callback_url",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/auth/token": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Get Access Token from Auth Code",
                "parameters": [
                    {
                        "description": "Access Token Input",
                        "name": "auth",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.getAccessToken.tokenRequestInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/strava.AuthorizationResponse"
                        }
                    }
                }
            }
        },
        "/api/dashboards": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "dashboard"
                ],
                "summary": "List Dashboards",
                "parameters": [
                    {
                        "type": "string",
                        "description": "pagination limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "active page",
                        "name": "page",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.PaginatedResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        " count": {
                                            "type": "integer"
                                        },
                                        "Results": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/models.Dashboard"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "dashboard"
                ],
                "summary": "Create Dashboard",
                "parameters": [
                    {
                        "description": "Dashboard Input",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.createDashboard.dashboardInput"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.Dashboard"
                        }
                    }
                }
            }
        },
        "/api/dashboards/{id}": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "dashboard"
                ],
                "summary": "Get Dashboard",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Dashboard ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Dashboard"
                        }
                    }
                }
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "dashboard"
                ],
                "summary": "Update Dashboard",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Dashboard ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Dashboard Input",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.updateDashboard.dashboardInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Dashboard"
                        }
                    }
                }
            },
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "dashboard"
                ],
                "summary": "Delete Dashboard",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Dashboard ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/api/dashboards/{id}/components": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "dashboard"
                ],
                "summary": "List Dashboard Components",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Dashboard ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.PaginatedResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        " count": {
                                            "type": "integer"
                                        },
                                        "Results": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/models.Component"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "dashboard"
                ],
                "summary": "Create Dashboard Components",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Dashboard ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Component Input",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.createComponent.componentInput"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.Component"
                        }
                    }
                }
            }
        },
        "/api/dashboards/{id}/components/{cpid}": {
            "put": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "dashboard"
                ],
                "summary": "Update Dashboard Component",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Dashboard ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Component ID",
                        "name": "cpid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Component Input",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.updateComponent.componentInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Component"
                        }
                    }
                }
            },
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "dashboard"
                ],
                "summary": "Delete Dashboard Component",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Dashboard ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Component ID",
                        "name": "cpid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/api/dashboards/{id}/components/{cpid}/run": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "dashboard"
                ],
                "summary": "Run Dashboard Component",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Dashboard ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Component ID",
                        "name": "cpid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/queue.TaskResult"
                        }
                    }
                }
            }
        },
        "/api/dashboards/{id}/run": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "dashboard"
                ],
                "summary": "Run Dashboard",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Dashboard ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/queue.TaskResult"
                        }
                    }
                }
            }
        },
        "/api/gears": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "gear"
                ],
                "summary": "List Gears",
                "parameters": [
                    {
                        "type": "string",
                        "description": "pagination limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "active page",
                        "name": "page",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.PaginatedResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        " count": {
                                            "type": "integer"
                                        },
                                        "Results": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/models.Gear"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/gears/{id}": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "gear"
                ],
                "summary": "Get Gear",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Gear ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Gear"
                        }
                    }
                }
            }
        },
        "/api/user/config": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Get Application Config",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Config"
                        }
                    }
                }
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Upsert Application Config",
                "parameters": [
                    {
                        "description": "Config Input",
                        "name": "config",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Config"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Config"
                        }
                    }
                }
            }
        },
        "/api/user/me": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Get Current User Details",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/strava.User"
                        }
                    }
                }
            }
        },
        "/api/user/query": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Run Query",
                "parameters": [
                    {
                        "description": "Query Input",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.runQuery.queryInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/queue.TaskResult"
                        }
                    }
                }
            }
        },
        "/api/user/sync": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Sync Strava data",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Strava Access Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/queue.TaskResult"
                        }
                    }
                }
            }
        },
        "/api/user/task/{id}": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Get Task Detail",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Task ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/queue.TaskResult"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "api.PaginatedResponse": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "results": {}
            }
        },
        "api.createComponent.componentInput": {
            "type": "object",
            "properties": {
                "configs": {},
                "name": {
                    "type": "string"
                },
                "query": {
                    "type": "string"
                },
                "type": {
                    "$ref": "#/definitions/models.ComponentType"
                }
            }
        },
        "api.createDashboard.dashboardInput": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "api.getAccessToken.tokenRequestInput": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                }
            }
        },
        "api.runQuery.queryInput": {
            "type": "object",
            "properties": {
                "query": {
                    "type": "string"
                }
            }
        },
        "api.updateComponent.componentInput": {
            "type": "object",
            "properties": {
                "configs": {},
                "name": {
                    "type": "string"
                },
                "query": {
                    "type": "string"
                },
                "type": {
                    "$ref": "#/definitions/models.ComponentType"
                }
            }
        },
        "api.updateDashboard.dashboardInput": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "models.Activity": {
            "type": "object",
            "properties": {
                "achievement_count": {
                    "type": "integer"
                },
                "athlete": {
                    "$ref": "#/definitions/models.Athlete"
                },
                "athlete_count": {
                    "type": "integer"
                },
                "athlete_id": {
                    "type": "integer"
                },
                "average_cadence": {
                    "type": "number"
                },
                "average_heart_rate": {
                    "type": "number"
                },
                "average_speed": {
                    "type": "number"
                },
                "average_temp": {
                    "type": "number"
                },
                "average_watts": {
                    "type": "number"
                },
                "comment_count": {
                    "type": "integer"
                },
                "commute": {
                    "type": "boolean"
                },
                "device_watts": {
                    "type": "boolean"
                },
                "distance": {
                    "type": "number"
                },
                "elapsed_time": {
                    "type": "integer"
                },
                "end_lat_lng": {
                    "type": "string"
                },
                "external_id": {
                    "type": "string"
                },
                "flagged": {
                    "type": "boolean"
                },
                "gear": {
                    "$ref": "#/definitions/models.Gear"
                },
                "gear_id": {
                    "type": "string"
                },
                "has_kudos": {
                    "type": "boolean"
                },
                "id": {
                    "type": "integer"
                },
                "kilojoules": {
                    "type": "number"
                },
                "kudos_count": {
                    "type": "integer"
                },
                "location_city": {
                    "type": "string"
                },
                "location_country": {
                    "type": "string"
                },
                "location_state": {
                    "type": "string"
                },
                "manual": {
                    "type": "boolean"
                },
                "map": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "max_heart_rate": {
                    "type": "number"
                },
                "max_speed": {
                    "type": "number"
                },
                "moving_time": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "photo_count": {
                    "type": "integer"
                },
                "private": {
                    "type": "boolean"
                },
                "start_date": {
                    "type": "string"
                },
                "start_date_local": {
                    "type": "string"
                },
                "start_lat_lng": {
                    "type": "string"
                },
                "time_zone": {
                    "type": "string"
                },
                "total_elevation_gain": {
                    "type": "number"
                },
                "trainer": {
                    "type": "boolean"
                },
                "truncated": {
                    "description": "only present if activity is owned by authenticated athlete, returns 0 if not truncated by privacy zones",
                    "type": "integer"
                },
                "type": {
                    "type": "string"
                },
                "upload_id": {
                    "type": "integer"
                },
                "weighted_average_watts": {
                    "type": "integer"
                }
            }
        },
        "models.Athlete": {
            "type": "object",
            "properties": {
                "approve_followers": {
                    "description": "if has enhanced privacy enabled",
                    "type": "boolean"
                },
                "badge_type_id": {
                    "type": "integer"
                },
                "city": {
                    "type": "string"
                },
                "country": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "firstname": {
                    "type": "string"
                },
                "follower": {
                    "description": "this athlete’s following status of the authenticated athlete",
                    "type": "string"
                },
                "friend": {
                    "description": "‘pending’, ‘accepted’, ‘blocked’ or ‘null’, the authenticated athlete’s following status of this athlete",
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "lastname": {
                    "type": "string"
                },
                "premium": {
                    "type": "boolean"
                },
                "profile": {
                    "description": "URL to a 124x124 pixel profile picture",
                    "type": "string"
                },
                "profile_medium": {
                    "description": "URL to a 62x62 pixel profile picture",
                    "type": "string"
                },
                "sex": {
                    "type": "string"
                },
                "state": {
                    "type": "string"
                },
                "tx": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "models.Component": {
            "type": "object",
            "properties": {
                "configs": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "created_at": {
                    "type": "string"
                },
                "dashboard": {
                    "$ref": "#/definitions/models.Dashboard"
                },
                "dashboardID": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "query": {
                    "type": "string"
                },
                "type": {
                    "$ref": "#/definitions/models.ComponentType"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "models.ComponentType": {
            "type": "string",
            "enum": [
                "table",
                "text",
                "pie_chart",
                "bar_chart",
                "line_chart"
            ],
            "x-enum-varnames": [
                "TableComponent",
                "TextComponent",
                "PieChartComponent",
                "BarChartComponent",
                "LineChartComponent"
            ]
        },
        "models.Config": {
            "type": "object",
            "properties": {
                "client_id": {
                    "type": "integer"
                },
                "client_secret": {
                    "type": "string"
                }
            }
        },
        "models.Dashboard": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "models.Gear": {
            "type": "object",
            "properties": {
                "athlete": {
                    "$ref": "#/definitions/models.Athlete"
                },
                "athleteID": {
                    "type": "integer"
                },
                "brand_name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "distance": {
                    "type": "number"
                },
                "frame_type": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "model_name": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "primary": {
                    "type": "boolean"
                }
            }
        },
        "queue.TaskResult": {
            "type": "object",
            "properties": {
                "completionTime": {
                    "type": "string"
                },
                "error": {},
                "id": {
                    "type": "string"
                },
                "result": {},
                "status": {
                    "$ref": "#/definitions/queue.TaskStatus"
                }
            }
        },
        "queue.TaskStatus": {
            "type": "string",
            "enum": [
                "pending",
                "success",
                "error",
                "archived"
            ],
            "x-enum-varnames": [
                "Pending",
                "Success",
                "Error",
                "Archived"
            ]
        },
        "strava.AthleteDetailed": {
            "type": "object",
            "properties": {
                "approve_followers": {
                    "description": "if has enhanced privacy enabled",
                    "type": "boolean"
                },
                "badge_type_id": {
                    "type": "integer"
                },
                "bikes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/strava.GearSummary"
                    }
                },
                "city": {
                    "type": "string"
                },
                "clubs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/strava.ClubSummary"
                    }
                },
                "country": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "date_preference": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "firstname": {
                    "type": "string"
                },
                "follower": {
                    "description": "this athlete’s following status of the authenticated athlete",
                    "type": "string"
                },
                "follower_count": {
                    "type": "integer"
                },
                "friend": {
                    "description": "‘pending’, ‘accepted’, ‘blocked’ or ‘null’, the authenticated athlete’s following status of this athlete",
                    "type": "string"
                },
                "friend_count": {
                    "type": "integer"
                },
                "ftp": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "lastname": {
                    "type": "string"
                },
                "measurement_preference": {
                    "type": "string"
                },
                "mutual_friend_count": {
                    "type": "integer"
                },
                "premium": {
                    "type": "boolean"
                },
                "profile": {
                    "description": "URL to a 124x124 pixel profile picture",
                    "type": "string"
                },
                "profile_medium": {
                    "description": "URL to a 62x62 pixel profile picture",
                    "type": "string"
                },
                "sex": {
                    "type": "string"
                },
                "shoes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/strava.GearSummary"
                    }
                },
                "state": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "weight": {
                    "description": "kilograms",
                    "type": "number"
                }
            }
        },
        "strava.AuthorizationResponse": {
            "type": "object",
            "properties": {
                "State": {
                    "type": "string"
                },
                "access_token": {
                    "type": "string"
                },
                "athlete": {
                    "$ref": "#/definitions/strava.AthleteDetailed"
                }
            }
        },
        "strava.ClubSummary": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "profile": {
                    "description": "URL to a 124x124 pixel profile picture",
                    "type": "string"
                },
                "profile_medium": {
                    "description": "URL to a 62x62 pixel profile picture",
                    "type": "string"
                }
            }
        },
        "strava.GearSummary": {
            "type": "object",
            "properties": {
                "distance": {
                    "type": "number"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "primary": {
                    "type": "boolean"
                }
            }
        },
        "strava.LapEffortSummary": {
            "type": "object",
            "properties": {
                "activity": {
                    "type": "object",
                    "properties": {
                        "id": {
                            "type": "integer"
                        }
                    }
                },
                "athlete": {
                    "type": "object",
                    "properties": {
                        "id": {
                            "type": "integer"
                        }
                    }
                },
                "average_cadence": {
                    "type": "number"
                },
                "average_heartrate": {
                    "type": "number"
                },
                "average_speed": {
                    "type": "number"
                },
                "average_watts": {
                    "type": "number"
                },
                "distance": {
                    "type": "number"
                },
                "elapsed_time": {
                    "type": "integer"
                },
                "end_index": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "lap_index": {
                    "type": "integer"
                },
                "max_heartrate": {
                    "type": "number"
                },
                "max_speed": {
                    "type": "number"
                },
                "moving_time": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "start_date": {
                    "type": "string"
                },
                "start_date_local": {
                    "type": "string"
                },
                "start_index": {
                    "type": "integer"
                },
                "total_elevation_gain": {
                    "type": "number"
                }
            }
        },
        "strava.User": {
            "type": "object",
            "properties": {
                "accessToken": {
                    "type": "string"
                },
                "athlete": {
                    "$ref": "#/definitions/strava.AthleteDetailed"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
